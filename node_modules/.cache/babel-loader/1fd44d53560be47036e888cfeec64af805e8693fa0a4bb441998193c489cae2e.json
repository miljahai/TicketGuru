{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nvar views = {\n  hours: 'heures',\n  minutes: 'minutes',\n  seconds: 'secondes'\n};\nvar frFRPickers = {\n  // Calendar navigation\n  previousMonth: 'Mois précédent',\n  nextMonth: 'Mois suivant',\n  // View navigation\n  openPreviousView: 'Ouvrir la vue précédente',\n  openNextView: 'Ouvrir la vue suivante',\n  calendarViewSwitchingButtonAriaLabel: function calendarViewSwitchingButtonAriaLabel(view) {\n    return view === 'year' ? 'La vue année est ouverte, ouvrir la vue calendrier' : 'La vue calendrier est ouverte, ouvrir la vue année';\n  },\n  // DateRange placeholders\n  start: 'Début',\n  end: 'Fin',\n  // Action bar\n  cancelButtonLabel: 'Annuler',\n  clearButtonLabel: 'Vider',\n  okButtonLabel: 'OK',\n  todayButtonLabel: \"Aujourd'hui\",\n  // Toolbar titles\n  datePickerToolbarTitle: 'Choisir une date',\n  dateTimePickerToolbarTitle: \"Choisir la date et l'heure\",\n  timePickerToolbarTitle: \"Choisir l'heure\",\n  dateRangePickerToolbarTitle: 'Choisir la plage de dates',\n  // Clock labels\n  clockLabelText: function clockLabelText(view, time, adapter) {\n    return \"Choix des \".concat(views[view], \". \").concat(time === null ? 'Aucune heure choisie' : \"L'heure choisie est \".concat(adapter.format(time, 'fullTime')));\n  },\n  hoursClockNumberText: function hoursClockNumberText(hours) {\n    return \"\".concat(hours, \" heures\");\n  },\n  minutesClockNumberText: function minutesClockNumberText(minutes) {\n    return \"\".concat(minutes, \" minutes\");\n  },\n  secondsClockNumberText: function secondsClockNumberText(seconds) {\n    return \"\".concat(seconds, \" secondes\");\n  },\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Semaine',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: function calendarWeekNumberAriaLabelText(weekNumber) {\n    return \"Semaine \".concat(weekNumber);\n  },\n  calendarWeekNumberText: function calendarWeekNumberText(weekNumber) {\n    return \"\".concat(weekNumber);\n  },\n  // Open picker labels\n  openDatePickerDialogue: function openDatePickerDialogue(value, utils) {\n    return value !== null && utils.isValid(value) ? \"Choisir la date, la date s\\xE9lectionn\\xE9e est \".concat(utils.format(value, 'fullDate')) : 'Choisir la date';\n  },\n  openTimePickerDialogue: function openTimePickerDialogue(value, utils) {\n    return value !== null && utils.isValid(value) ? \"Choisir l'heure, l'heure s\\xE9lectionn\\xE9e est \".concat(utils.format(value, 'fullTime')) : \"Choisir l'heure\";\n  },\n  // Table labels\n  timeTableLabel: \"choix de l'heure\",\n  dateTableLabel: 'choix de la date',\n  // Field section placeholders\n  fieldYearPlaceholder: function fieldYearPlaceholder(params) {\n    return 'A'.repeat(params.digitAmount);\n  },\n  fieldMonthPlaceholder: function fieldMonthPlaceholder(params) {\n    return params.contentType === 'letter' ? 'MMMM' : 'MM';\n  },\n  fieldDayPlaceholder: function fieldDayPlaceholder() {\n    return 'JJ';\n  },\n  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: function fieldHoursPlaceholder() {\n    return 'hh';\n  },\n  fieldMinutesPlaceholder: function fieldMinutesPlaceholder() {\n    return 'mm';\n  },\n  fieldSecondsPlaceholder: function fieldSecondsPlaceholder() {\n    return 'ss';\n  },\n  fieldMeridiemPlaceholder: function fieldMeridiemPlaceholder() {\n    return 'aa';\n  }\n};\nexport var frFR = getPickersLocalization(frFRPickers);","map":{"version":3,"names":["getPickersLocalization","views","hours","minutes","seconds","frFRPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","datePickerToolbarTitle","dateTimePickerToolbarTitle","timePickerToolbarTitle","dateRangePickerToolbarTitle","clockLabelText","time","adapter","concat","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","calendarWeekNumberHeaderLabel","calendarWeekNumberHeaderText","calendarWeekNumberAriaLabelText","weekNumber","calendarWeekNumberText","openDatePickerDialogue","value","utils","isValid","openTimePickerDialogue","timeTableLabel","dateTableLabel","fieldYearPlaceholder","params","repeat","digitAmount","fieldMonthPlaceholder","contentType","fieldDayPlaceholder","fieldHoursPlaceholder","fieldMinutesPlaceholder","fieldSecondsPlaceholder","fieldMeridiemPlaceholder","frFR"],"sources":["C:/Users/sirvi/Documents/IT-tradenomikoulutus/OhjelmistoProjektiI/TicketGuru/node_modules/@mui/x-date-pickers/locales/frFR.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'heures',\n  minutes: 'minutes',\n  seconds: 'secondes'\n};\nconst frFRPickers = {\n  // Calendar navigation\n  previousMonth: 'Mois précédent',\n  nextMonth: 'Mois suivant',\n  // View navigation\n  openPreviousView: 'Ouvrir la vue précédente',\n  openNextView: 'Ouvrir la vue suivante',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'La vue année est ouverte, ouvrir la vue calendrier' : 'La vue calendrier est ouverte, ouvrir la vue année',\n  // DateRange placeholders\n  start: 'Début',\n  end: 'Fin',\n  // Action bar\n  cancelButtonLabel: 'Annuler',\n  clearButtonLabel: 'Vider',\n  okButtonLabel: 'OK',\n  todayButtonLabel: \"Aujourd'hui\",\n  // Toolbar titles\n  datePickerToolbarTitle: 'Choisir une date',\n  dateTimePickerToolbarTitle: \"Choisir la date et l'heure\",\n  timePickerToolbarTitle: \"Choisir l'heure\",\n  dateRangePickerToolbarTitle: 'Choisir la plage de dates',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Choix des ${views[view]}. ${time === null ? 'Aucune heure choisie' : `L'heure choisie est ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} heures`,\n  minutesClockNumberText: minutes => `${minutes} minutes`,\n  secondsClockNumberText: seconds => `${seconds} secondes`,\n  // Calendar labels\n  calendarWeekNumberHeaderLabel: 'Semaine',\n  calendarWeekNumberHeaderText: '#',\n  calendarWeekNumberAriaLabelText: weekNumber => `Semaine ${weekNumber}`,\n  calendarWeekNumberText: weekNumber => `${weekNumber}`,\n  // Open picker labels\n  openDatePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Choisir la date, la date sélectionnée est ${utils.format(value, 'fullDate')}` : 'Choisir la date',\n  openTimePickerDialogue: (value, utils) => value !== null && utils.isValid(value) ? `Choisir l'heure, l'heure sélectionnée est ${utils.format(value, 'fullTime')}` : \"Choisir l'heure\",\n  // Table labels\n  timeTableLabel: \"choix de l'heure\",\n  dateTableLabel: 'choix de la date',\n  // Field section placeholders\n  fieldYearPlaceholder: params => 'A'.repeat(params.digitAmount),\n  fieldMonthPlaceholder: params => params.contentType === 'letter' ? 'MMMM' : 'MM',\n  fieldDayPlaceholder: () => 'JJ',\n  // fieldWeekDayPlaceholder: params => params.contentType === 'letter' ? 'EEEE' : 'EE',\n  fieldHoursPlaceholder: () => 'hh',\n  fieldMinutesPlaceholder: () => 'mm',\n  fieldSecondsPlaceholder: () => 'ss',\n  fieldMeridiemPlaceholder: () => 'aa'\n};\nexport const frFR = getPickersLocalization(frFRPickers);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}