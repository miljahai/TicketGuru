{"ast":null,"code":"import { usePickerValue } from './usePickerValue';\nimport { usePickerViews } from './usePickerViews';\nimport { usePickerLayoutProps } from './usePickerLayoutProps';\nimport { buildWarning } from '../../utils/warning';\nvar warnRenderInputIsDefined = buildWarning(['The `renderInput` prop has been removed in version 6.0 of the Date and Time Pickers.', 'You can replace it with the `textField` component slot in most cases.', 'For more information, please have a look at the migration guide (https://mui.com/x/migration/migration-pickers-v5/#input-renderer-required-in-v5).']);\nexport var usePicker = function usePicker(_ref) {\n  var props = _ref.props,\n    valueManager = _ref.valueManager,\n    wrapperVariant = _ref.wrapperVariant,\n    inputRef = _ref.inputRef,\n    additionalViewProps = _ref.additionalViewProps,\n    validator = _ref.validator,\n    autoFocusView = _ref.autoFocusView;\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.renderInput != null) {\n      warnRenderInputIsDefined();\n    }\n  }\n  var pickerValueResponse = usePickerValue({\n    props: props,\n    valueManager: valueManager,\n    wrapperVariant: wrapperVariant,\n    validator: validator\n  });\n  var pickerViewsResponse = usePickerViews({\n    props: props,\n    inputRef: inputRef,\n    additionalViewProps: additionalViewProps,\n    autoFocusView: autoFocusView,\n    propsFromPickerValue: pickerValueResponse.viewProps\n  });\n  var pickerLayoutResponse = usePickerLayoutProps({\n    props: props,\n    wrapperVariant: wrapperVariant,\n    propsFromPickerValue: pickerValueResponse.layoutProps,\n    propsFromPickerViews: pickerViewsResponse.layoutProps\n  });\n  return {\n    // Picker value\n    open: pickerValueResponse.open,\n    actions: pickerValueResponse.actions,\n    fieldProps: pickerValueResponse.fieldProps,\n    // Picker views\n    renderCurrentView: pickerViewsResponse.renderCurrentView,\n    hasUIView: pickerViewsResponse.hasUIView,\n    shouldRestoreFocus: pickerViewsResponse.shouldRestoreFocus,\n    // Picker layout\n    layoutProps: pickerLayoutResponse.layoutProps\n  };\n};","map":{"version":3,"names":["usePickerValue","usePickerViews","usePickerLayoutProps","buildWarning","warnRenderInputIsDefined","usePicker","_ref","props","valueManager","wrapperVariant","inputRef","additionalViewProps","validator","autoFocusView","process","env","NODE_ENV","renderInput","pickerValueResponse","pickerViewsResponse","propsFromPickerValue","viewProps","pickerLayoutResponse","layoutProps","propsFromPickerViews","open","actions","fieldProps","renderCurrentView","hasUIView","shouldRestoreFocus"],"sources":["C:/Users/sirvi/Documents/IT-tradenomikoulutus/OhjelmistoProjektiI/TicketGuru/node_modules/@mui/x-date-pickers/internals/hooks/usePicker/usePicker.js"],"sourcesContent":["import { usePickerValue } from './usePickerValue';\nimport { usePickerViews } from './usePickerViews';\nimport { usePickerLayoutProps } from './usePickerLayoutProps';\nimport { buildWarning } from '../../utils/warning';\nconst warnRenderInputIsDefined = buildWarning(['The `renderInput` prop has been removed in version 6.0 of the Date and Time Pickers.', 'You can replace it with the `textField` component slot in most cases.', 'For more information, please have a look at the migration guide (https://mui.com/x/migration/migration-pickers-v5/#input-renderer-required-in-v5).']);\nexport const usePicker = ({\n  props,\n  valueManager,\n  wrapperVariant,\n  inputRef,\n  additionalViewProps,\n  validator,\n  autoFocusView\n}) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (props.renderInput != null) {\n      warnRenderInputIsDefined();\n    }\n  }\n  const pickerValueResponse = usePickerValue({\n    props,\n    valueManager,\n    wrapperVariant,\n    validator\n  });\n  const pickerViewsResponse = usePickerViews({\n    props,\n    inputRef,\n    additionalViewProps,\n    autoFocusView,\n    propsFromPickerValue: pickerValueResponse.viewProps\n  });\n  const pickerLayoutResponse = usePickerLayoutProps({\n    props,\n    wrapperVariant,\n    propsFromPickerValue: pickerValueResponse.layoutProps,\n    propsFromPickerViews: pickerViewsResponse.layoutProps\n  });\n  return {\n    // Picker value\n    open: pickerValueResponse.open,\n    actions: pickerValueResponse.actions,\n    fieldProps: pickerValueResponse.fieldProps,\n    // Picker views\n    renderCurrentView: pickerViewsResponse.renderCurrentView,\n    hasUIView: pickerViewsResponse.hasUIView,\n    shouldRestoreFocus: pickerViewsResponse.shouldRestoreFocus,\n    // Picker layout\n    layoutProps: pickerLayoutResponse.layoutProps\n  };\n};"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,YAAY,QAAQ,qBAAqB;AAClD,IAAMC,wBAAwB,GAAGD,YAAY,CAAC,CAAC,sFAAsF,EAAE,uEAAuE,EAAE,oJAAoJ,CAAC,CAAC;AACtW,OAAO,IAAME,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAQhB;EAAA,IAPJC,KAAK,GAAAD,IAAA,CAALC,KAAK;IACLC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IACZC,cAAc,GAAAH,IAAA,CAAdG,cAAc;IACdC,QAAQ,GAAAJ,IAAA,CAARI,QAAQ;IACRC,mBAAmB,GAAAL,IAAA,CAAnBK,mBAAmB;IACnBC,SAAS,GAAAN,IAAA,CAATM,SAAS;IACTC,aAAa,GAAAP,IAAA,CAAbO,aAAa;EAEb,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,IAAIT,KAAK,CAACU,WAAW,IAAI,IAAI,EAAE;MAC7Bb,wBAAwB,EAAE;IAC5B;EACF;EACA,IAAMc,mBAAmB,GAAGlB,cAAc,CAAC;IACzCO,KAAK,EAALA,KAAK;IACLC,YAAY,EAAZA,YAAY;IACZC,cAAc,EAAdA,cAAc;IACdG,SAAS,EAATA;EACF,CAAC,CAAC;EACF,IAAMO,mBAAmB,GAAGlB,cAAc,CAAC;IACzCM,KAAK,EAALA,KAAK;IACLG,QAAQ,EAARA,QAAQ;IACRC,mBAAmB,EAAnBA,mBAAmB;IACnBE,aAAa,EAAbA,aAAa;IACbO,oBAAoB,EAAEF,mBAAmB,CAACG;EAC5C,CAAC,CAAC;EACF,IAAMC,oBAAoB,GAAGpB,oBAAoB,CAAC;IAChDK,KAAK,EAALA,KAAK;IACLE,cAAc,EAAdA,cAAc;IACdW,oBAAoB,EAAEF,mBAAmB,CAACK,WAAW;IACrDC,oBAAoB,EAAEL,mBAAmB,CAACI;EAC5C,CAAC,CAAC;EACF,OAAO;IACL;IACAE,IAAI,EAAEP,mBAAmB,CAACO,IAAI;IAC9BC,OAAO,EAAER,mBAAmB,CAACQ,OAAO;IACpCC,UAAU,EAAET,mBAAmB,CAACS,UAAU;IAC1C;IACAC,iBAAiB,EAAET,mBAAmB,CAACS,iBAAiB;IACxDC,SAAS,EAAEV,mBAAmB,CAACU,SAAS;IACxCC,kBAAkB,EAAEX,mBAAmB,CAACW,kBAAkB;IAC1D;IACAP,WAAW,EAAED,oBAAoB,CAACC;EACpC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}