{"ast":null,"code":"import _defineProperty from\"C:/Users/sirvi/Documents/IT-tradenomikoulutus/OhjelmistoProjektiI/TicketGuru/ticketguruclient/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/sirvi/Documents/IT-tradenomikoulutus/OhjelmistoProjektiI/TicketGuru/ticketguruclient/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/sirvi/Documents/IT-tradenomikoulutus/OhjelmistoProjektiI/TicketGuru/ticketguruclient/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import axios from\"axios\";import{Button,Dialog,DialogTitle,DialogActions,DialogContent,TextField,Autocomplete}from'@mui/material';import{Add}from'@mui/icons-material';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function AddTicketTypes(props){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),events=_useState2[0],setEvents=_useState2[1];var _useState3=useState({id:'',name:''}),_useState4=_slicedToArray(_useState3,2),selectedEvent=_useState4[0],setSelectedEvent=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),open=_useState6[0],setOpen=_useState6[1];var _useState7=useState({name:'',price:'',eventrecord_id:0}),_useState8=_slicedToArray(_useState7,2),tickettype=_useState8[0],setTickettype=_useState8[1];var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setTickettype({});setOpen(false);};var handleInputChange=function handleInputChange(event){setTickettype(_objectSpread(_objectSpread({},tickettype),{},_defineProperty({},event.target.name,event.target.value)));//console.log(tickettype)\n};var addTickettype=function addTickettype(){// Build tickettype to be send to server\n// Close Dialog\n// Clear Dialog fields\nvar tickettypetosent={name:tickettype.name,price:tickettype.price,eventRecord:{eventrecord_id:tickettype.eventrecord_id}};//console.log(tickettypetosent);\nprops.saveTickettype(tickettypetosent);handleClose();setTickettype({eventrecord_name:'',name:'',price:'',eventrecord_id:0});};// Fetch events for Dialog event selection:\nuseEffect(function(){Promise.all([axios.get('http://localhost:8080/events',{headers:{'Authorization':\"Bearer \".concat(props.user.jwt)}})]).then(function(_ref){var _ref2=_slicedToArray(_ref,1),response=_ref2[0];console.log('Events fetched:',response.data);setEvents(response.data);}).catch(function(error){console.log('Error fetching events: ',error);});},[props.user.jwt]);return/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsxs(Button,{variant:\"contained\",sx:{m:1},onClick:handleClickOpen,children:[/*#__PURE__*/_jsx(Add,{}),\"Lis\\xE4\\xE4 lipputyyppi\"]}),/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:handleClose,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Lis\\xE4\\xE4 uusi lipputtyypi\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(Autocomplete,{sx:{margin:'dense'},options:Object.values(events).map(function(event){return event;}),getOptionLabel:function getOptionLabel(option){return option.eventrecord_name||'';},renderInput:function renderInput(params){return/*#__PURE__*/_jsx(TextField,_objectSpread(_objectSpread({},params),{},{label:\"Tapahtuma\"}));},value:selectedEvent.eventrecord_name,defaultValue:null,freeSolo:true,name:\"eventrecord_name\",onChange:function onChange(event,value){setSelectedEvent(value);setTickettype(_objectSpread(_objectSpread({},tickettype),{},{eventrecord_id:value.eventrecord_id}));}}),/*#__PURE__*/_jsx(TextField,{margin:\"dense\",name:\"name\",value:tickettype.ticket_type_name,label:\"Lipputyypin nimi\",onChange:function onChange(e,newValue){return handleInputChange(e);},fullWidth:true,variant:\"standard\",required:true}),/*#__PURE__*/_jsx(TextField,{margin:\"dense\",name:\"price\",value:tickettype.price,label:\"Hinta\",onChange:function onChange(e){return handleInputChange(e);},fullWidth:true,variant:\"standard\",required:true})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:addTickettype,children:\"Lis\\xE4\\xE4 lipputyyppi\"}),/*#__PURE__*/_jsx(Button,{onClick:handleClose,children:\"Peruuta\"})]})]})]});}","map":{"version":3,"names":["React","useState","useEffect","axios","Button","Dialog","DialogTitle","DialogActions","DialogContent","TextField","Autocomplete","Add","jsx","_jsx","jsxs","_jsxs","AddTicketTypes","props","_useState","_useState2","_slicedToArray","events","setEvents","_useState3","id","name","_useState4","selectedEvent","setSelectedEvent","_useState5","_useState6","open","setOpen","_useState7","price","eventrecord_id","_useState8","tickettype","setTickettype","handleClickOpen","handleClose","handleInputChange","event","_objectSpread","_defineProperty","target","value","addTickettype","tickettypetosent","eventRecord","saveTickettype","eventrecord_name","Promise","all","get","headers","concat","user","jwt","then","_ref","_ref2","response","console","log","data","catch","error","children","variant","sx","m","onClick","onClose","margin","options","Object","values","map","getOptionLabel","option","renderInput","params","label","defaultValue","freeSolo","onChange","ticket_type_name","e","newValue","fullWidth","required"],"sources":["C:/Users/sirvi/Documents/IT-tradenomikoulutus/OhjelmistoProjektiI/TicketGuru/ticketguruclient/src/components/AddTicketTypes.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport { Button, Dialog, DialogTitle, DialogActions, DialogContent, TextField, Autocomplete } from '@mui/material'\r\nimport { Add } from '@mui/icons-material';\r\n\r\nexport default function AddTicketTypes(props) {\r\n\r\n    const [events, setEvents] = useState({});\r\n    const [selectedEvent, setSelectedEvent] = useState({ id: '', name: '' })\r\n    const [open, setOpen] = useState(false);\r\n    const [tickettype, setTickettype] = useState({\r\n        name: '', price: '', eventrecord_id: 0\r\n    });\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setTickettype({})\r\n        setOpen(false);\r\n    };\r\n    const handleInputChange = (event) => {\r\n        setTickettype({ ...tickettype, [event.target.name]: event.target.value })\r\n        //console.log(tickettype)\r\n    };\r\n    const addTickettype = () => {\r\n        // Build tickettype to be send to server\r\n        // Close Dialog\r\n        // Clear Dialog fields\r\n        const tickettypetosent = {\r\n            name: tickettype.name,\r\n            price: tickettype.price,\r\n            eventRecord: { eventrecord_id: tickettype.eventrecord_id }\r\n        }\r\n        //console.log(tickettypetosent);\r\n        props.saveTickettype(tickettypetosent);\r\n        handleClose();\r\n        setTickettype({ eventrecord_name: '', name: '', price: '', eventrecord_id: 0 })\r\n    }\r\n\r\n    // Fetch events for Dialog event selection:\r\n    useEffect(() => {\r\n        Promise.all([\r\n            axios.get('http://localhost:8080/events', {\r\n                headers: {\r\n                    'Authorization': `Bearer ${props.user.jwt}`\r\n                }\r\n            })\r\n        ]).then(([response]) => {\r\n            console.log('Events fetched:', response.data);\r\n            setEvents(response.data);\r\n        }).catch(error => {\r\n            console.log('Error fetching events: ', error);\r\n        });\r\n    }, [props.user.jwt]);\r\n\r\n\r\n\r\n    return (\r\n        <span>\r\n            <Button variant=\"contained\" sx={{ m: 1 }} onClick={handleClickOpen}>\r\n                <Add />Lisää lipputyyppi\r\n            </Button>\r\n\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Lisää uusi lipputtyypi</DialogTitle>\r\n                <DialogContent>\r\n                    <Autocomplete\r\n                        sx={{ margin: 'dense' }}\r\n                        options={Object.values(events).map((event) => event)}\r\n                        getOptionLabel={(option) => option.eventrecord_name || ''}\r\n                        renderInput={(params) => <TextField {...params} label=\"Tapahtuma\" />}\r\n                        value={selectedEvent.eventrecord_name}\r\n                        defaultValue={null}\r\n                        freeSolo={true}\r\n                        name='eventrecord_name'\r\n                        onChange={(event, value) => {\r\n                            setSelectedEvent(value);\r\n                            setTickettype({ ...tickettype, eventrecord_id: value.eventrecord_id });\r\n                        }}\r\n                    />\r\n                    <TextField\r\n                        margin='dense'\r\n                        name='name'\r\n                        value={tickettype.ticket_type_name}\r\n                        label='Lipputyypin nimi'\r\n                        onChange={(e, newValue) => handleInputChange(e)}\r\n                        fullWidth\r\n                        variant='standard'\r\n                        required\r\n                    />\r\n                    <TextField\r\n                        margin='dense'\r\n                        name='price'\r\n                        value={tickettype.price}\r\n                        label='Hinta'\r\n                        onChange={e => handleInputChange(e)}\r\n                        fullWidth\r\n                        variant='standard'\r\n                        required\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={addTickettype}>Lisää lipputyyppi</Button>\r\n                    <Button onClick={handleClose}>Peruuta</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </span>\r\n    );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}