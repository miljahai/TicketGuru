{"ast":null,"code":"export var CLOCK_WIDTH = 220;\nexport var CLOCK_HOUR_WIDTH = 36;\nvar clockCenter = {\n  x: CLOCK_WIDTH / 2,\n  y: CLOCK_WIDTH / 2\n};\nvar baseClockPoint = {\n  x: clockCenter.x,\n  y: 0\n};\nvar cx = baseClockPoint.x - clockCenter.x;\nvar cy = baseClockPoint.y - clockCenter.y;\nvar rad2deg = function rad2deg(rad) {\n  return rad * (180 / Math.PI);\n};\nvar getAngleValue = function getAngleValue(step, offsetX, offsetY) {\n  var x = offsetX - clockCenter.x;\n  var y = offsetY - clockCenter.y;\n  var atan = Math.atan2(cx, cy) - Math.atan2(x, y);\n  var deg = rad2deg(atan);\n  deg = Math.round(deg / step) * step;\n  deg %= 360;\n  var value = Math.floor(deg / step) || 0;\n  var delta = Math.pow(x, 2) + Math.pow(y, 2);\n  var distance = Math.sqrt(delta);\n  return {\n    value: value,\n    distance: distance\n  };\n};\nexport var getMinutes = function getMinutes(offsetX, offsetY) {\n  var step = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var angleStep = step * 6;\n  var _getAngleValue = getAngleValue(angleStep, offsetX, offsetY),\n    value = _getAngleValue.value;\n  value = value * step % 60;\n  return value;\n};\nexport var getHours = function getHours(offsetX, offsetY, ampm) {\n  var _getAngleValue2 = getAngleValue(30, offsetX, offsetY),\n    value = _getAngleValue2.value,\n    distance = _getAngleValue2.distance;\n  var hour = value || 12;\n  if (!ampm) {\n    if (distance < CLOCK_WIDTH / 2 - CLOCK_HOUR_WIDTH) {\n      hour += 12;\n      hour %= 24;\n    }\n  } else {\n    hour %= 12;\n  }\n  return hour;\n};","map":{"version":3,"names":["CLOCK_WIDTH","CLOCK_HOUR_WIDTH","clockCenter","x","y","baseClockPoint","cx","cy","rad2deg","rad","Math","PI","getAngleValue","step","offsetX","offsetY","atan","atan2","deg","round","value","floor","delta","pow","distance","sqrt","getMinutes","arguments","length","undefined","angleStep","_getAngleValue","getHours","ampm","_getAngleValue2","hour"],"sources":["C:/Users/sirvi/Documents/IT-tradenomikoulutus/OhjelmistoProjektiI/TicketGuru/ticketguruclient/node_modules/@mui/x-date-pickers/TimeClock/shared.js"],"sourcesContent":["export const CLOCK_WIDTH = 220;\nexport const CLOCK_HOUR_WIDTH = 36;\nconst clockCenter = {\n  x: CLOCK_WIDTH / 2,\n  y: CLOCK_WIDTH / 2\n};\nconst baseClockPoint = {\n  x: clockCenter.x,\n  y: 0\n};\nconst cx = baseClockPoint.x - clockCenter.x;\nconst cy = baseClockPoint.y - clockCenter.y;\nconst rad2deg = rad => rad * (180 / Math.PI);\nconst getAngleValue = (step, offsetX, offsetY) => {\n  const x = offsetX - clockCenter.x;\n  const y = offsetY - clockCenter.y;\n  const atan = Math.atan2(cx, cy) - Math.atan2(x, y);\n  let deg = rad2deg(atan);\n  deg = Math.round(deg / step) * step;\n  deg %= 360;\n  const value = Math.floor(deg / step) || 0;\n  const delta = x ** 2 + y ** 2;\n  const distance = Math.sqrt(delta);\n  return {\n    value,\n    distance\n  };\n};\nexport const getMinutes = (offsetX, offsetY, step = 1) => {\n  const angleStep = step * 6;\n  let {\n    value\n  } = getAngleValue(angleStep, offsetX, offsetY);\n  value = value * step % 60;\n  return value;\n};\nexport const getHours = (offsetX, offsetY, ampm) => {\n  const {\n    value,\n    distance\n  } = getAngleValue(30, offsetX, offsetY);\n  let hour = value || 12;\n  if (!ampm) {\n    if (distance < CLOCK_WIDTH / 2 - CLOCK_HOUR_WIDTH) {\n      hour += 12;\n      hour %= 24;\n    }\n  } else {\n    hour %= 12;\n  }\n  return hour;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}