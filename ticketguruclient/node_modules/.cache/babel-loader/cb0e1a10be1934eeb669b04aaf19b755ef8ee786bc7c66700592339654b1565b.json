{"ast":null,"code":"export var isYearOnlyView = function isYearOnlyView(views) {\n  return views.length === 1 && views[0] === 'year';\n};\nexport var isYearAndMonthViews = function isYearAndMonthViews(views) {\n  return views.length === 2 && views.indexOf('month') !== -1 && views.indexOf('year') !== -1;\n};\nexport var applyDefaultViewProps = function applyDefaultViewProps(_ref) {\n  var openTo = _ref.openTo,\n    defaultOpenTo = _ref.defaultOpenTo,\n    views = _ref.views,\n    defaultViews = _ref.defaultViews;\n  var viewsWithDefault = views != null ? views : defaultViews;\n  var openToWithDefault;\n  if (openTo != null) {\n    openToWithDefault = openTo;\n  } else if (viewsWithDefault.includes(defaultOpenTo)) {\n    openToWithDefault = defaultOpenTo;\n  } else if (viewsWithDefault.length > 0) {\n    openToWithDefault = viewsWithDefault[0];\n  } else {\n    throw new Error('MUI: The `views` prop must contain at least one view');\n  }\n  return {\n    views: viewsWithDefault,\n    openTo: openToWithDefault\n  };\n};","map":{"version":3,"names":["isYearOnlyView","views","length","isYearAndMonthViews","indexOf","applyDefaultViewProps","_ref","openTo","defaultOpenTo","defaultViews","viewsWithDefault","openToWithDefault","includes","Error"],"sources":["C:/Users/sirvi/Documents/IT-tradenomikoulutus/OhjelmistoProjektiI/TicketGuru/ticketguruclient/node_modules/@mui/x-date-pickers/internals/utils/views.js"],"sourcesContent":["export const isYearOnlyView = views => views.length === 1 && views[0] === 'year';\nexport const isYearAndMonthViews = views => views.length === 2 && views.indexOf('month') !== -1 && views.indexOf('year') !== -1;\nexport const applyDefaultViewProps = ({\n  openTo,\n  defaultOpenTo,\n  views,\n  defaultViews\n}) => {\n  const viewsWithDefault = views != null ? views : defaultViews;\n  let openToWithDefault;\n  if (openTo != null) {\n    openToWithDefault = openTo;\n  } else if (viewsWithDefault.includes(defaultOpenTo)) {\n    openToWithDefault = defaultOpenTo;\n  } else if (viewsWithDefault.length > 0) {\n    openToWithDefault = viewsWithDefault[0];\n  } else {\n    throw new Error('MUI: The `views` prop must contain at least one view');\n  }\n  return {\n    views: viewsWithDefault,\n    openTo: openToWithDefault\n  };\n};"],"mappings":"AAAA,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAcA,CAAGC,KAAK;EAAA,OAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,IAAID,KAAK,CAAC,CAAC,CAAC,KAAK,MAAM;AAAA;AAChF,OAAO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAmBA,CAAGF,KAAK;EAAA,OAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,IAAID,KAAK,CAACG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAIH,KAAK,CAACG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAAA;AAC/H,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAAC,IAAA,EAK5B;EAAA,IAJJC,MAAM,GAAAD,IAAA,CAANC,MAAM;IACNC,aAAa,GAAAF,IAAA,CAAbE,aAAa;IACbP,KAAK,GAAAK,IAAA,CAALL,KAAK;IACLQ,YAAY,GAAAH,IAAA,CAAZG,YAAY;EAEZ,IAAMC,gBAAgB,GAAGT,KAAK,IAAI,IAAI,GAAGA,KAAK,GAAGQ,YAAY;EAC7D,IAAIE,iBAAiB;EACrB,IAAIJ,MAAM,IAAI,IAAI,EAAE;IAClBI,iBAAiB,GAAGJ,MAAM;EAC5B,CAAC,MAAM,IAAIG,gBAAgB,CAACE,QAAQ,CAACJ,aAAa,CAAC,EAAE;IACnDG,iBAAiB,GAAGH,aAAa;EACnC,CAAC,MAAM,IAAIE,gBAAgB,CAACR,MAAM,GAAG,CAAC,EAAE;IACtCS,iBAAiB,GAAGD,gBAAgB,CAAC,CAAC,CAAC;EACzC,CAAC,MAAM;IACL,MAAM,IAAIG,KAAK,CAAC,sDAAsD,CAAC;EACzE;EACA,OAAO;IACLZ,KAAK,EAAES,gBAAgB;IACvBH,MAAM,EAAEI;EACV,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}