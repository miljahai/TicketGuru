{"ast":null,"code":"import _slicedToArray from\"C:/Users/sirvi/Documents/IT-tradenomikoulutus/OhjelmistoProjektiI/TicketGuru/ticketguruclient/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Button,Dialog,DialogTitle,DialogActions,DialogContent,TextField}from'@mui/material';import axios from\"axios\";import{useState}from\"react\";import{useUser}from'../util/UserProvider';import LockIcon from'@mui/icons-material/Lock';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ChangePassword(props){var user=useUser();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var email=props.email;var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),currentPassword=_useState4[0],setCurrentPassword=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newPassword=_useState6[0],setNewPassword=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];// Password must contain at least 8 characters including at least one uppercase letter, one lowercase letter, one number, and one special character.\nvar passwordRegex=/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/;var handleClickOpen=function handleClickOpen(){setOpen(true);};var handleClose=function handleClose(){setOpen(false);};var handleSubmit=function handleSubmit(e){e.preventDefault();// Validate password\nvar isPasswordValid=validatePassword();if(!isPasswordValid){return;}// Password is valid, send request to backend\naxios.put(\"http://localhost:8080/auth/change-password\",{email:email,currentPassword:currentPassword,newPassword:newPassword,confirmPassword:confirmPassword},{headers:{'Authorization':\"Bearer \".concat(user.jwt)}}).then(function(response){console.log(response);alert('Password changed successfully!');handleClose();}).catch(function(error){console.error(error);alert(error.response.data);});};// Check if passwords match\nvar validatePassword=function validatePassword(){if(newPassword!==confirmPassword){// Passwords do not match, return false\nalert('Passwords do not match');return false;}// Passwords match, return true\nreturn true;};return/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsxs(Button,{variant:\"outlined\",sx:{m:1},onClick:handleClickOpen,children:[/*#__PURE__*/_jsx(LockIcon,{}),\" \\xA0 Vaihda salasana\"]}),/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:handleClose,children:[/*#__PURE__*/_jsx(DialogTitle,{children:\"Change Password\"}),/*#__PURE__*/_jsxs(DialogContent,{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{required:true,label:\"Current Password\",type:\"password\",value:currentPassword,onChange:function onChange(event){return setCurrentPassword(event.target.value);},sx:{marginTop:1},error:currentPassword==='',helperText:currentPassword===''?'This field is required':''})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{required:true,label:\"New Password\",type:\"password\",value:newPassword,onChange:function onChange(event){return setNewPassword(event.target.value);},sx:{marginY:1},error:!passwordRegex.test(newPassword),helperText:!passwordRegex.test(newPassword)?'Password must contain at least 8 characters including at least one uppercase letter, one lowercase letter, one number, and one special character.':''})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{required:true,label:\"Confirm Password\",type:\"password\",value:confirmPassword,onChange:function onChange(event){return setConfirmPassword(event.target.value);},error:confirmPassword!==newPassword,helperText:confirmPassword!==newPassword?'Passwords do not match':''})})]}),/*#__PURE__*/_jsxs(DialogActions,{children:[/*#__PURE__*/_jsx(Button,{onClick:handleClose,children:\"Cancel\"}),/*#__PURE__*/_jsx(Button,{onClick:handleSubmit,children:\"Save\"})]})]})]});}export default ChangePassword;","map":{"version":3,"names":["Button","Dialog","DialogTitle","DialogActions","DialogContent","TextField","axios","useState","useUser","LockIcon","jsx","_jsx","jsxs","_jsxs","ChangePassword","props","user","_useState","_useState2","_slicedToArray","open","setOpen","email","_useState3","_useState4","currentPassword","setCurrentPassword","_useState5","_useState6","newPassword","setNewPassword","_useState7","_useState8","confirmPassword","setConfirmPassword","passwordRegex","handleClickOpen","handleClose","handleSubmit","e","preventDefault","isPasswordValid","validatePassword","put","headers","concat","jwt","then","response","console","log","alert","catch","error","data","children","variant","sx","m","onClick","onClose","required","label","type","value","onChange","event","target","marginTop","helperText","marginY","test"],"sources":["C:/Users/sirvi/Documents/IT-tradenomikoulutus/OhjelmistoProjektiI/TicketGuru/ticketguruclient/src/components/ChangePassword.js"],"sourcesContent":["import { Button, Dialog, DialogTitle, DialogActions, DialogContent, TextField } from '@mui/material'\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useUser } from '../util/UserProvider';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\n\r\nfunction ChangePassword(props) {\r\n  const user = useUser();\r\n  const [open, setOpen] = useState(false);\r\n  const { email } = props;\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  // Password must contain at least 8 characters including at least one uppercase letter, one lowercase letter, one number, and one special character.\r\n  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#$@!%&*?])[A-Za-z\\d#$@!%&*?]{8,30}$/;\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n      \r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // Validate password\r\n    const isPasswordValid = validatePassword();\r\n    if (!isPasswordValid) {\r\n      return;\r\n    }\r\n    // Password is valid, send request to backend\r\n    axios.put(`http://localhost:8080/auth/change-password`, {\r\n      email: email,\r\n      currentPassword: currentPassword,\r\n      newPassword: newPassword,\r\n      confirmPassword: confirmPassword\r\n    }, {\r\n        headers: {\r\n            'Authorization': `Bearer ${user.jwt}`\r\n        }\r\n    })\r\n    .then(response => {\r\n      console.log(response);\r\n      alert('Password changed successfully!');\r\n      handleClose();\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n      alert(error.response.data);\r\n    });\r\n  };\r\n\r\n  // Check if passwords match\r\n  const validatePassword = () => {\r\n    if (newPassword !== confirmPassword) {\r\n      // Passwords do not match, return false\r\n      alert('Passwords do not match');\r\n      return false;\r\n    }\r\n    // Passwords match, return true\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <span>\r\n      <Button variant=\"outlined\" sx={{ m: 1 }} onClick={handleClickOpen}>\r\n        <LockIcon /> &nbsp; Vaihda salasana\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle >Change Password</DialogTitle>\r\n        <DialogContent>\r\n          <div>\r\n          <TextField\r\n            required\r\n            label=\"Current Password\"\r\n            type=\"password\"\r\n            value={currentPassword}\r\n            onChange={(event) => setCurrentPassword(event.target.value)}\r\n            sx={{ marginTop: 1 }}\r\n            error={currentPassword === ''}\r\n            helperText={currentPassword === '' ? 'This field is required' : ''}\r\n          />\r\n          </div>\r\n          <div>\r\n          <TextField\r\n            required\r\n            label=\"New Password\"\r\n            type=\"password\"\r\n            value={newPassword}\r\n            onChange={(event) => setNewPassword(event.target.value)}\r\n            sx={{ marginY: 1 }}\r\n            error={!passwordRegex.test(newPassword)}\r\n            helperText={!passwordRegex.test(newPassword) ? 'Password must contain at least 8 characters including at least one uppercase letter, one lowercase letter, one number, and one special character.' : ''}\r\n          />\r\n          </div>\r\n          <div>\r\n          <TextField\r\n            required\r\n            label=\"Confirm Password\"\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={(event) => setConfirmPassword(event.target.value)}\r\n            error={confirmPassword !== newPassword}\r\n            helperText={confirmPassword !== newPassword ? 'Passwords do not match' : ''}\r\n          />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleSubmit}>Save</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </span>\r\n  );\r\n} \r\n\r\nexport default ChangePassword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}