{"ast":null,"code":"import _slicedToArray from\"C:/Users/sirvi/Documents/IT-tradenomikoulutus/OhjelmistoProjektiI/TicketGuru/ticketguruclient/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";// \nfunction useLocalState(defaultValue,key){var _useState=useState(function(){// Use the \"localStorage\" object to get the value associated with the specified key\nvar localStorageValue=localStorage.getItem(key);// If a value is found, parse it from a JSON string to an object and return it as the initial value for \"value\"\nreturn localStorageValue!==null?JSON.parse(localStorageValue):defaultValue;}),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];useEffect(function(){// Store the current value of \"value\" in \"localStorage\" as a JSON string under the specified key\nlocalStorage.setItem(key,JSON.stringify(value));},[key,value]);// Return an array containing the current value of the state variable and a function to update it\nreturn[value,setValue];}export{useLocalState};","map":{"version":3,"names":["useEffect","useState","useLocalState","defaultValue","key","_useState","localStorageValue","localStorage","getItem","JSON","parse","_useState2","_slicedToArray","value","setValue","setItem","stringify"],"sources":["C:/Users/sirvi/Documents/IT-tradenomikoulutus/OhjelmistoProjektiI/TicketGuru/ticketguruclient/src/util/useLocalStorage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\n// \r\nfunction useLocalState(defaultValue, key) {\r\n  const [value, setValue] = useState(() => {\r\n    // Use the \"localStorage\" object to get the value associated with the specified key\r\n    const localStorageValue = localStorage.getItem(key);\r\n\r\n    // If a value is found, parse it from a JSON string to an object and return it as the initial value for \"value\"\r\n    return localStorageValue !== null\r\n      ? JSON.parse(localStorageValue)\r\n      : defaultValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Store the current value of \"value\" in \"localStorage\" as a JSON string under the specified key\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  // Return an array containing the current value of the state variable and a function to update it\r\n  return [value, setValue];\r\n}\r\n\r\nexport { useLocalState };"],"mappings":"mLAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C;AACA,QAAS,CAAAC,aAAaA,CAACC,YAAY,CAAEC,GAAG,CAAE,CACxC,IAAAC,SAAA,CAA0BJ,QAAQ,CAAC,UAAM,CACvC;AACA,GAAM,CAAAK,iBAAiB,CAAGC,YAAY,CAACC,OAAO,CAACJ,GAAG,CAAC,CAEnD;AACA,MAAO,CAAAE,iBAAiB,GAAK,IAAI,CAC7BG,IAAI,CAACC,KAAK,CAACJ,iBAAiB,CAAC,CAC7BH,YAAY,CAClB,CAAC,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAP,SAAA,IARKQ,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IAUtBX,SAAS,CAAC,UAAM,CACd;AACAO,YAAY,CAACQ,OAAO,CAACX,GAAG,CAAEK,IAAI,CAACO,SAAS,CAACH,KAAK,CAAC,CAAC,CAClD,CAAC,CAAE,CAACT,GAAG,CAAES,KAAK,CAAC,CAAC,CAEhB;AACA,MAAO,CAACA,KAAK,CAAEC,QAAQ,CAAC,CAC1B,CAEA,OAASZ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}